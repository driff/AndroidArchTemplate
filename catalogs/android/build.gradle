plugins {
    id 'version-catalog'
    id 'maven-publish'
}

catalog {
    versionCatalog{
        // Kotlin
        version("kotlin_version", "1.8.0")
        version("coroutines_version", "1.6.4")
        version("arch_core_version", "2.1.0")
        //Android
        version("multidex_version", "2.0.1")
        version("android_core_version", "1.9.0")
        version("android_app_compat_version", "1.6.0")
        version("lifecycle_version", "2.5.1")
        version("agp_version", "7.4.0")
        version("navigation_version", "2.5.3")
        // Compose
        version("compose_version", "1.3.3")
        version("compose_fundation_version", "1.3.1")
        version("compose_compiler_version", "1.4.0")
        version("activity_compose_version", "1.5.1")
        version("compose_constraint_version", "1.0.1")
        // Material
        version("material_version", "1.6.1")
        version("compose_material_version", "1.3.1")
        version("compose_material3_version", "1.0.1")
        // utils
        version("ktor_version", "2.2.2")
        version("dagger_version", "2.44.2")
        version("arrow_version", "1.1.3")
        // testing
        version("androidx_test_runner_version", "1.5.2")
        version("androidx_test_core_version", "1.5.0")
        version("turbine_version", "0.12.1")
        version("mockk_version", "1.13.4")
        version("junit_version", "4.13.2")
        version("junit_ext_version", "1.1.5")
        version("espresso_core_version", "3.5.1")
        version("robolectric_version", "4.9.2")
        version("slf4j_version", "2.0.6")

        plugin("kotlin-lang", "org.jetbrains.kotlin.jvm").versionRef("kotlin_version")
        plugin("kotlin-android", "org.jetbrains.kotlin.android").versionRef("kotlin_version")
        plugin("android-app", "com.android.application").versionRef("agp_version")
        plugin("android-lib", "com.android.library").versionRef("agp_version")
        plugin("kotlin-kapt", "org.jetbrains.kotlin.kapt").versionRef("kotlin_version")
        plugin("kotlin-allopen", "org.jetbrains.kotlin.plugin.allopen").versionRef("kotlin_version")
        plugin("hilt-android", "com.google.dagger.hilt.android").versionRef("dagger_version")

        // Kotlin
        library("kotlin-reflect", "org.jetbrains.kotlin", "kotlin-reflect").versionRef("kotlin_version")
        library("kotlin-stdlib", "org.jetbrains.kotlin", "kotlin-stdlib-jdk8").versionRef("kotlin_version")
        library("kotlin-logging", "io.github.microutils:kotlin-logging-jvm:2.1.23")

        //Android
        library("android-multidex", "androidx.multidex", "multidex").versionRef("multidex_version")
        library("androidx-core", "androidx.core", "core-ktx").versionRef("android_core_version")
        library("androidx-app-compat", "androidx.appcompat", "appcompat").versionRef("android_app_compat_version")
        library("androidx-app-compat-res", "androidx.appcompat", "appcompat-resources").versionRef("android_app_compat_version")
        library("androidx-arch-core-common", "androidx.arch.core", "core-common").versionRef("arch_core_version")
        library("androidx-arch-core-runtime", "androidx.arch.core", "core-runtime").versionRef("arch_core_version")
        library("android-lifecycle", "androidx.lifecycle", "lifecycle-runtime-ktx").versionRef("lifecycle_version")
        library("android-lifecycle-savedstate", "androidx.lifecycle", "lifecycle-viewmodel-savedstate").versionRef("lifecycle_version")
        library("android-lifecycle-livedata", "androidx.lifecycle", "lifecycle-livedata-ktx").versionRef("lifecycle_version")
        library("android-lifecycle-common", "androidx.lifecycle", "lifecycle-common-java8").versionRef("lifecycle_version")
        library("android-lifecycle-viewmodel", "androidx.lifecycle", "lifecycle-viewmodel-ktx").versionRef("lifecycle_version")
        library("di-hilt-android", "com.google.dagger", "hilt-android").versionRef("dagger_version")
        library("di-hilt-compiler",  "com.google.dagger", "hilt-compiler").versionRef("dagger_version")
        library("android-material",  "com.google.android.material", "material").versionRef("material_version")
        library("android-navigation",  "androidx.navigation", "navigation-compose").versionRef("navigation_version")

        // Utils
        library("logback", "ch.qos.logback:logback-classic:1.2.11")
        library("cashapp-turbine", "app.cash.turbine", "turbine").versionRef("turbine_version")
        library("ktor-core", "io.ktor", "ktor-client-core").versionRef("ktor_version")
        library("ktor-okhttp", "io.ktor", "ktor-client-okhttp").versionRef("ktor_version")
        library("ktor-android", "io.ktor", "ktor-client-android").versionRef("ktor_version")
        library("ktor-logging", "io.ktor", "ktor-client-logging").versionRef("ktor_version")
        library("ktor-content-negotiation", "io.ktor", "ktor-client-content-negotiation").versionRef("ktor_version")
        library("ktor-serialization", "io.ktor", "ktor-serialization-kotlinx-json").versionRef("ktor_version")
        library("ktor-client-res", "io.ktor", "ktor-client-resources").versionRef("ktor_version")
        library("arrow-core", "io.arrow-kt", "arrow-core").versionRef("arrow_version")

        // Compose
        library("compose-ui", "androidx.compose.ui", "ui").versionRef("compose_version")
        library("compose-ui-preview", "androidx.compose.ui", "ui-tooling-preview").versionRef("compose_version")
        library("compose-ui-tooling", "androidx.compose.ui", "ui-tooling").versionRef("compose_version")
        library("compose-runtime", "androidx.compose.runtime", "runtime").versionRef("compose_version")
        library("compose-runtime-livedata", "androidx.compose.runtime", "runtime-livedata").versionRef("compose_version")
        library("android-compose-activity", "androidx.activity", "activity-compose").versionRef("activity_compose_version")
        library("android-lifecycle-compose", "androidx.lifecycle", "lifecycle-viewmodel-compose").versionRef("lifecycle_version")
        library("compose-fundation", "androidx.compose.foundation", "foundation").versionRef("compose_fundation_version")
        library("compose-constraint-layout", "androidx.constraintlayout", "constraintlayout-compose").versionRef("compose_constraint_version")

        // Material
        library("compose-material", "androidx.compose.material", "material").versionRef("compose_material_version")
        library("android-material3",  "androidx.compose.material3", "material3").versionRef("compose_material3_version")
        library("android-material3-windows",  "androidx.compose.material3", "material3-window-size-class").versionRef("compose_material3_version")

        // Testing
        library("androidx-arch-core-testing", "androidx.arch.core", "core-testing").versionRef("arch_core_version")
        library("log4j-test", "org.slf4j", "slf4j-simple").versionRef("slf4j_version")
        library("android-lifecycle-testing", "androidx.lifecycle", "lifecycle-runtime-testing").versionRef("lifecycle_version")
        library("tests-ktor-client", "io.ktor", "ktor-client-mock").versionRef("ktor_version")
        library("tests-junit", "junit", "junit").versionRef("junit_version")
        library("tests-junit-ktx", "androidx.test.ext", "junit-ktx").versionRef("junit_ext_version")
        library("tests-runner", "androidx.test", "runner").versionRef("androidx_test_runner_version")
        library("tests-robolectric", "org.robolectric", "robolectric").versionRef("robolectric_version")
        library("tests-core", "androidx.test", "core").versionRef("androidx_test_core_version")
        library("tests-core-ktx", "androidx.test", "core-ktx").versionRef("androidx_test_core_version")
        library("tests-rules", "androidx.test", "rules").versionRef("androidx_test_core_version")
        library("tests-coroutines", "org.jetbrains.kotlinx", "kotlinx-coroutines-test").versionRef("coroutines_version")
        library("tests-ext-junit", "androidx.test.ext", "junit").versionRef("junit_ext_version")
        library("tests-ext-junitktx", "androidx.test.ext", "junit-ktx").versionRef("junit_ext_version")
        library("tests-spresso-core", "androidx.test.espresso", "espresso-core").versionRef("espresso_core_version")
        library("tests-spresso-contrib", "androidx.test.espresso", "espresso-contrib").versionRef("espresso_core_version")
        library("tests-spresso-resource", "androidx.test.espresso", "espresso-idling-resource").versionRef("espresso_core_version")
        library("tests-spresso-idling", "androidx.test.espresso.idling", "idling-concurrent").versionRef("espresso_core_version")
        library("tests-spresso-idling-net", "androidx.test.espresso.idling", "idling-net").versionRef("espresso_core_version")
        library("tests-ui-junit4", "androidx.compose.ui", "ui-test-junit4").versionRef("compose_version")
        library("tests-ui-tooling", "androidx.compose.ui", "ui-tooling").versionRef("compose_version")
        library("tests-ui-manifest", "androidx.compose.ui", "ui-test-manifest").versionRef("compose_version")
        library("tests-ui", "androidx.compose.ui", "ui-test").versionRef("compose_version")
        library("tests-hilt-android", "com.google.dagger", "hilt-android-testing").versionRef("dagger_version")
        library("tests-mockk", "io.mockk", "mockk").versionRef("mockk_version")
        library("tests-mockk-jvm", "io.mockk", "mockk-agent-jvm").versionRef("mockk_version")


        bundle("kotlin-tooling", [
                "kotlin-reflect",
                "kotlin-stdlib",
                "kotlin-logging"
        ])

        bundle("android-hilt", ["di-hilt-android"])
        bundle("ktor-android", [
                "ktor-core",
                "ktor-okhttp",
                "ktor-android",
                "ktor-logging",
                "ktor-content-negotiation",
                "ktor-serialization",
                "ktor-client-res"
        ])
        bundle ("android-material-design-compose", [
                "android-material",
                "android-material3",
                "android-material3-windows",
        ])
        bundle("android-compose", [
                "compose-constraint-layout",
                "compose-ui",
                "compose-material",
                "compose-fundation",
                "compose-runtime",
                "compose-ui-preview",
                "compose-runtime-livedata",
                "android-compose-activity",
                "android-lifecycle-compose",
        ])

        bundle("android-compose-debug", [
                "compose-ui-tooling"
        ])

        bundle("android-base", [
                "android-multidex",
                "androidx-core",
                "androidx-app-compat",
                "androidx-app-compat-res",
                "android-lifecycle-savedstate",
                "android-lifecycle-common",
                "android-navigation",
                "android-lifecycle-viewmodel",
                "android-lifecycle-livedata",
                "android-lifecycle",
                "androidx-arch-core-common",
                "androidx-arch-core-runtime",
        ])

        bundle("kotlin-testing-tools", [
                "cashapp-turbine",
                "tests-mockk",
                "tests-mockk-jvm",
                "tests-coroutines"
        ])

        bundle("android-jvm-testing", [
                "tests-robolectric"
        ])

        bundle("android-junit-testing", [
                "tests-junit-ktx",
                "tests-junit",
                "tests-ext-junit",
                "tests-ext-junitktx",
                "tests-ui-junit4"
        ])

        bundle("android-testing", [
                "tests-core",
                "tests-core-ktx",
                "tests-ktor-client",
                "tests-ui",
                "tests-rules",
                "tests-runner",
                "android-lifecycle-testing",
                "tests-spresso-contrib",
                "tests-spresso-resource",
                "tests-spresso-idling-net",
                "tests-spresso-idling",
                "tests-spresso-core",
                "androidx-arch-core-testing",
        ])

        bundle("hilt-testing", [
                "tests-hilt-android"
        ])

        bundle("android-testing-extra", [
                "tests-ui-tooling",
                "tests-ui-manifest",
        ])
    }
}
